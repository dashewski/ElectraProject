{
  "address": "0x6d632196b9D33A9Acb7F3F2A04381594E0e428B6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PRICERS_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USD_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pricer",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "enforceIsSupportedToken",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressBook",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onlyGovernanceWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pricers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "setOnlyProductOwnerWithdrawn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pricer",
          "type": "address"
        }
      ],
      "name": "updateTokenPricer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "usdAmountToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb04900015a7efb0e8d49b34974b4928b24ba2121b286975224d00e419263dbc6",
  "receipt": {
    "to": null,
    "from": "0x2458B3c26F4E904Af6Ff26f09FA23AcFE4C90AD8",
    "contractAddress": "0x6d632196b9D33A9Acb7F3F2A04381594E0e428B6",
    "transactionIndex": 0,
    "gasUsed": "1301265",
    "logsBloom": "0x
    "blockHash": "0xedac86afd46a26054fbe42bdfde24301f922bebba7cb3706ff108e0a964b66a9",
    "transactionHash": "0xb04900015a7efb0e8d49b34974b4928b24ba2121b286975224d00e419263dbc6",
    "logs": [],
    "blockNumber": 34316685,
    "cumulativeGasUsed": "1301265",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "484aaa5084cf8712325300fcc6dac02e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICERS_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pricer\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"enforceIsSupportedToken\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressBook\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyGovernanceWithdrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pricers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setOnlyProductOwnerWithdrawn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pricer\",\"type\":\"address\"}],\"name\":\"updateTokenPricer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"usdAmountToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/core/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.18;\\r\\n\\r\\nimport { UUPSUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport { IERC20Metadata } from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\n\\r\\nimport { ITreasury } from \\\"../interfaces/ITreasury.sol\\\";\\r\\nimport { IAddressBook } from \\\"../interfaces/IAddressBook.sol\\\";\\r\\nimport { IPricer } from \\\"../interfaces/IPricer.sol\\\";\\r\\n\\r\\ncontract Treasury is ITreasury, UUPSUpgradeable {\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- CONSTANTS --------------------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    uint256 public constant PRICERS_DECIMALS = 8;\\r\\n    uint256 public constant USD_DECIMALS = 18;\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- STORAGE ----------------------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    address public addressBook;\\r\\n    mapping(address => address) public pricers;\\r\\n    bool public onlyGovernanceWithdrawn;\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- EVENTS -----------------------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    event Withdraw(address indexed from, address indexed to, address indexed token, uint256 amount);\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- DEPLOY & UPGRADE  ------------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    function initialize(address _addressBook) public initializer {\\r\\n        addressBook = _addressBook;\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address) internal view override {\\r\\n        IAddressBook(addressBook).enforceIsProductOwner(msg.sender);\\r\\n    }\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- PRODUCT OWNER ACTIONS  -------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    function setOnlyProductOwnerWithdrawn(bool _value) external {\\r\\n        IAddressBook(addressBook).enforceIsProductOwner(msg.sender);\\r\\n        onlyGovernanceWithdrawn = _value;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, address _pricer) external {\\r\\n        IAddressBook(addressBook).enforceIsProductOwner(msg.sender);\\r\\n\\r\\n        require(pricers[_token] == address(0), \\\"Treasury: already exists!\\\");\\r\\n        require(_pricer != address(0), \\\"Treasury: pricer == 0\\\");\\r\\n        require(IPricer(_pricer).decimals() == PRICERS_DECIMALS, \\\"Treasury: pricer decimals != 8\\\");\\r\\n\\r\\n        pricers[_token] = _pricer;\\r\\n    }\\r\\n\\r\\n    function updateTokenPricer(address _token, address _pricer) external {\\r\\n        IAddressBook(addressBook).enforceIsProductOwner(msg.sender);\\r\\n\\r\\n        require(pricers[_token] != address(0), \\\"Treasury: not exists!\\\");\\r\\n        require(_pricer == address(0), \\\"Treasury: pricer == 0\\\");\\r\\n        require(IPricer(_pricer).decimals() == PRICERS_DECIMALS, \\\"Treasury: pricer decimals != 8\\\");\\r\\n\\r\\n        pricers[_token] = _pricer;\\r\\n    }\\r\\n\\r\\n    function deleteToken(address _token) external {\\r\\n        IAddressBook(addressBook).enforceIsProductOwner(msg.sender);\\r\\n        require(pricers[_token] != address(0), \\\"Treasury: not exists!\\\");\\r\\n        delete pricers[_token];\\r\\n    }\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- PRODUCT OWNER & PROTOCOL ACTIONS  --------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n\\r\\n    function withdraw(address _token, uint256 _amount, address _recipient) external {\\r\\n        require(_amount > 0, \\\"Treasury: withdrawn amount is zero!\\\");\\r\\n        IAddressBook _addressBook = IAddressBook(addressBook);\\r\\n\\r\\n        require(\\r\\n            (_addressBook.stakingStrategies(msg.sender) && onlyGovernanceWithdrawn == false) ||\\r\\n                _addressBook.productOwner() == msg.sender,\\r\\n            \\\"Treasury: withdraw not authorized!\\\"\\r\\n        );\\r\\n\\r\\n        bool success = IERC20Metadata(_token).transfer(_recipient, _amount);\\r\\n        require(success, \\\"ERC20 transfer failed!\\\");\\r\\n\\r\\n        emit Withdraw(msg.sender, _recipient, _token, _amount);\\r\\n    }\\r\\n\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    // ----- VIEW  ------------------------------------------------------------------------\\r\\n    // ------------------------------------------------------------------------------------\\r\\n    function usdAmountToToken(uint256 _usdAmount, address _token) public view returns (uint256) {\\r\\n        IPricer pricer = IPricer(pricers[_token]);\\r\\n        require(address(pricer) != address(0), \\\"not supported token!\\\");\\r\\n\\r\\n        (, int256 tokenPrice, , , ) = pricer.latestRoundData();\\r\\n        return\\r\\n            (_usdAmount * (10 ** IERC20Metadata(_token).decimals()) * (10 ** PRICERS_DECIMALS)) /\\r\\n            uint256(tokenPrice) /\\r\\n            10 ** USD_DECIMALS;\\r\\n    }\\r\\n\\r\\n    function enforceIsSupportedToken(address _token) external view {\\r\\n        require(pricers[_token] != address(0), \\\"Treasury: unknown token!\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x47c1dab526d8f493668378d81befcc1b6977dff2d5daf5145703c7ee12bee1c5\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAddressBook.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.18;\\r\\n\\r\\ninterface IAddressBook {\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    function enforceIsItemContract(address _contract) external view;\\r\\n\\r\\n    function enforceIsProductOwner(address _account) external view;\\r\\n    \\r\\n    function productOwner() external view returns (address);\\r\\n\\r\\n    function items(address _item) external view returns (bool);\\r\\n\\r\\n    function stakingStrategies(address _stakingStrategy) external view returns (bool);\\r\\n\\r\\n    function enforceIsStakingStrategyContract(address _contract) external view;\\r\\n    // function stakingPlatform() external view returns (address);\\r\\n    // function itemsFactory() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x643c1a51d3fca90328cb1a4718f91cccf7fc8d37fe0ce8b22bd2a30e30477f6c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IPricer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.18;\\r\\n\\r\\ninterface IPricer {\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        );\\r\\n\\r\\n    function setCurrentPrice(int256 _newPrice) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xfe2520af1681cbf7043096881d75bcce0250d3750b625718b26529d3129af761\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.18;\\r\\n\\r\\ninterface ITreasury {\\r\\n    function enforceIsSupportedToken(address _token) external view;\\r\\n\\r\\n    function usdAmountToToken(uint256 _usdAmount, address _token) external view returns (uint256);\\r\\n\\r\\n    function withdraw(address _token, uint256 _amount, address _recipient) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xae441e1c2de113c7115599c44fc56bbad87c814d712596dcbe1e847797519823\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a08060405234610031573060805261169290816100378239608051818181610ad601528181610c010152610fa80152f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826324682c031461122f575081632f6ee695146112135781633659cfe614610f80578382634051064714610ef4575081634cf4ae8214610ed05781634f1ef28614610b8657816352d1902d14610ac05781635476bd721461096957816369328dec146106bf578163ad878d2e14610591578163c4d66de814610458578163c906fea0146103da578163ccedf78a146101fa578163f069f7121461013c57508063f5887cdd146101145763ff0d54b4146100d757600080fd5b34610110576020366003190112610110576020916001600160a01b03908290826100ff61124a565b168152606685522054169051908152f35b5080fd5b503461011057816003193601126101105760655490516001600160a01b039091168152602090f35b9050346101f65760203660031901126101f65761015761124a565b6065546001600160a01b0392908316908590823b156101105781906024875180958193630ceb3b9b60e21b835233908301525afa9182156101ea5784926101cf575b50506101b59116918285526066602052838520541615156115c9565b82526066602052812080546001600160a01b031916905580f35b6101da919250611276565b6101e657818438610199565b8380fd5b508451903d90823e3d90fd5b8280fd5b9050346101f657816003193601126101f6576001600160a01b03928135929084610222611260565b1680825260209560668752838320541680156103a0579060a0859392855196878092633fabe5a360e21b82525afa94851561034457908791839661034e575b50845163313ce56760e01b815291908290859082905afa908115610344579060ff918391610317575b501690604d82116103045750600a0a938481029481860414901517156102ef576305f5e100938481029481860414901517156102ef5782156102da575090670de0b6b3a764000091519204048152f35b601290634e487b7160e01b6000525260246000fd5b601190634e487b7160e01b6000525260246000fd5b634e487b7160e01b815260118352602490fd5b6103379150883d8a1161033d575b61032f81836112bc565b810190611564565b3861028a565b503d610325565b84513d84823e3d90fd5b9150945060a0813d8211610398575b8161036a60a093836112bc565b8101031261011057868161037e8593611625565b5061038f6080838301519201611625565b50959091610261565b3d915061035d565b835162461bcd60e51b815280860188905260146024820152736e6f7420737570706f7274656420746f6b656e2160601b6044820152606490fd5b919050346101f65760203660031901126101f6576001600160a01b03806103ff61124a565b1684526066602052818420541615610415578280f35b906020606492519162461bcd60e51b8352820152601860248201527f54726561737572793a20756e6b6e6f776e20746f6b656e2100000000000000006044820152fd5b9050346101f65760203660031901126101f65761047361124a565b835460ff8160081c161592838094610584575b801561056d575b15610513575060ff198116600117855582610502575b5060018060a01b03166bffffffffffffffffffffffff60a01b60655416176065556104cc575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff1916610101178455386104a3565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b15801561048d5750600160ff83161461048d565b50600160ff831610610486565b919050346101f657806003193601126101f6576105ac61124a565b6105b4611260565b60655490916001600160a01b039186908316803b156101105781602491875192838092630ceb3b9b60e21b8252338c8301525afa80156106b5579084939291610698575b50501691828652606660205261061482858820541615156115c9565b16926106208415611520565b60208351809263313ce56760e01b825281875afa90811561068e5760ff610653926008928891610670575b50161461157d565b83526066602052822080546001600160a01b031916909117905580f35b610688915060203d811161033d5761032f81836112bc565b3861064b565b83513d87823e3d90fd5b6106a491929350611276565b6106b157819086386105f8565b8580fd5b86513d84823e3d90fd5b9050346101f65760603660031901126101f6576106da61124a565b6024926001600160a01b036044358181169486359493929091869003610964578415610916576065548351635ee0531d60e01b8152338482015260209591831686828b81845afa91821561090c57859188918d946108ed575b50836108df575b831561086a575b5050501561081d571695825163a9059cbb60e01b81528683820152858282015284816044818c8c5af19081156108135789916107e6575b50156107ad575050907f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f791519283523392a480f35b60649360169293519362461bcd60e51b8552840152820152754552433230207472616e73666572206661696c65642160501b6044820152fd5b6108069150853d871161080c575b6107fe81836112bc565b81019061160d565b38610778565b503d6107f4565b84513d8b823e3d90fd5b835162461bcd60e51b81528084018690526022818a01527f54726561737572793a207769746864726177206e6f7420617574686f72697a65604482015261642160f01b6064820152608490fd5b8751631241377160e31b815293509091839182905afa9081156108d5578a9161089b575b5082163314838638610741565b90508581813d83116108ce575b6108b281836112bc565b810103126108ca575182811681036108ca573861088e565b8980fd5b503d6108a8565b85513d8c823e3d90fd5b60675460ff1615935061073a565b610905919450823d841161080c576107fe81836112bc565b9238610733565b86513d8d823e3d90fd5b506023866020608494519362461bcd60e51b85528401528201527f54726561737572793a2077697468647261776e20616d6f756e74206973207a65604482015262726f2160e81b6064820152fd5b600080fd5b919050346101f657806003193601126101f65761098461124a565b61098c611260565b60655490916001600160a01b039186908316803b156101105781602491875192838092630ceb3b9b60e21b8252338c8301525afa80156106b5579084939291610aa7575b5050169081865260209260668452818588205416610a645716936109f5851515611520565b828451809263313ce56760e01b825281885afa908115610a5a57600860ff6066959493610a2a938a91610a435750161461157d565b855252822080546001600160a01b031916909117905580f35b6106889150863d881161033d5761032f81836112bc565b84513d88823e3d90fd5b845162461bcd60e51b8152808701859052601960248201527f54726561737572793a20616c72656164792065786973747321000000000000006044820152606490fd5b610ab391929350611276565b6106b157819086386109d0565b90508234610b835780600319360112610b8357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b1b576020825160008051602061163d8339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b80fd5b918091506003193601126101f657610b9c61124a565b9060249081359067ffffffffffffffff82116106b157366023830112156106b15781850135610bca816112de565b610bd6835191826112bc565b8181528760209485830193368882840101116101f65780888893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610c2f308314156112fa565b610c4c60008051602061163d83398151915292828454161461135b565b898160655416803b1561011057818b8a895180948193630ceb3b9b60e21b835233908301525afa8015610ec657610eb2575b50507f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cbe5750505050505050610cbb91506113bc565b80f35b87929394959697169085516352d1902d60e01b815287818b81865afa60009181610e83575b50610d4157865162461bcd60e51b8152808b01899052602e818b01527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b989294989791939703610e2f575050610d59826113bc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590610e27575b610d96575b505050505080f35b600080610e1296845196610da9886112a0565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15610e1d573d610e03610dfa826112de565b925192836112bc565b8152600081943d92013e61144c565b503880808080610d8e565b506060925061144c565b506001610d89565b845162461bcd60e51b81529182018690526029908201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d8311610eab575b610e9a81836112bc565b81010312610b835750519038610ce3565b503d610e90565b610ebb90611276565b6108ca578938610c7e565b87513d84823e3d90fd5b50503461011057816003193601126101105760209060ff6067541690519015158152f35b915034610110576020366003190112610110578035928315158094036101f6576065546001600160a01b031691823b156101e65783906024835180958193630ceb3b9b60e21b835233908301525afa908115610f775750610f63575b505060ff80196067541691161760675580f35b610f6c90611276565b610110578138610f50565b513d84823e3d90fd5b919050346101f6576020806003193601126101e657610f9d61124a565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116610fd5308214156112fa565b610ff260008051602061163d83398151915291838354161461135b565b816065541687813b15610b83578451630ceb3b9b60e21b8152338982015291829060249082905afa8015611209576111f6575b508251908482019282841067ffffffffffffffff8511176111e1578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561108057505050505050610cbb91506113bc565b869293949596169085516352d1902d60e01b815287818a81865afa600091816111b2575b5061110357865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b97919293969594970361115d575061111a826113bc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511580159061115557610d9657505050505080f35b506000610d89565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d83116111da575b6111c981836112bc565b81010312610b8357505190386110a4565b503d6111bf565b604188634e487b7160e01b6000525260246000fd5b61120290979197611276565b9538611025565b84513d8a823e3d90fd5b5050346101105781600319360112610110576020905160128152f35b84903461011057816003193601126101105780600860209252f35b600435906001600160a01b038216820361096457565b602435906001600160a01b038216820361096457565b67ffffffffffffffff811161128a57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761128a57604052565b90601f8019910116810190811067ffffffffffffffff82111761128a57604052565b67ffffffffffffffff811161128a57601f01601f191660200190565b1561130157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561136257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156113f15760008051602061163d83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156114ae5750815115611460575090565b3b156114695790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156114c15750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611507575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506114e4565b1561152757565b60405162461bcd60e51b8152602060048201526015602482015274054726561737572793a20707269636572203d3d203605c1b6044820152606490fd5b90816020910312610964575160ff811681036109645790565b1561158457565b60405162461bcd60e51b815260206004820152601e60248201527f54726561737572793a2070726963657220646563696d616c7320213d203800006044820152606490fd5b156115d057565b60405162461bcd60e51b815260206004820152601560248201527454726561737572793a206e6f74206578697374732160581b6044820152606490fd5b90816020910312610964575180151581036109645790565b519069ffffffffffffffffffff821682036109645756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122088b6145abfae96d340b142ea0223e55431e7c7a68f7f28f4d91cfe3b72609aa464736f6c63430008120033",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826324682c031461122f575081632f6ee695146112135781633659cfe614610f80578382634051064714610ef4575081634cf4ae8214610ed05781634f1ef28614610b8657816352d1902d14610ac05781635476bd721461096957816369328dec146106bf578163ad878d2e14610591578163c4d66de814610458578163c906fea0146103da578163ccedf78a146101fa578163f069f7121461013c57508063f5887cdd146101145763ff0d54b4146100d757600080fd5b34610110576020366003190112610110576020916001600160a01b03908290826100ff61124a565b168152606685522054169051908152f35b5080fd5b503461011057816003193601126101105760655490516001600160a01b039091168152602090f35b9050346101f65760203660031901126101f65761015761124a565b6065546001600160a01b0392908316908590823b156101105781906024875180958193630ceb3b9b60e21b835233908301525afa9182156101ea5784926101cf575b50506101b59116918285526066602052838520541615156115c9565b82526066602052812080546001600160a01b031916905580f35b6101da919250611276565b6101e657818438610199565b8380fd5b508451903d90823e3d90fd5b8280fd5b9050346101f657816003193601126101f6576001600160a01b03928135929084610222611260565b1680825260209560668752838320541680156103a0579060a0859392855196878092633fabe5a360e21b82525afa94851561034457908791839661034e575b50845163313ce56760e01b815291908290859082905afa908115610344579060ff918391610317575b501690604d82116103045750600a0a938481029481860414901517156102ef576305f5e100938481029481860414901517156102ef5782156102da575090670de0b6b3a764000091519204048152f35b601290634e487b7160e01b6000525260246000fd5b601190634e487b7160e01b6000525260246000fd5b634e487b7160e01b815260118352602490fd5b6103379150883d8a1161033d575b61032f81836112bc565b810190611564565b3861028a565b503d610325565b84513d84823e3d90fd5b9150945060a0813d8211610398575b8161036a60a093836112bc565b8101031261011057868161037e8593611625565b5061038f6080838301519201611625565b50959091610261565b3d915061035d565b835162461bcd60e51b815280860188905260146024820152736e6f7420737570706f7274656420746f6b656e2160601b6044820152606490fd5b919050346101f65760203660031901126101f6576001600160a01b03806103ff61124a565b1684526066602052818420541615610415578280f35b906020606492519162461bcd60e51b8352820152601860248201527f54726561737572793a20756e6b6e6f776e20746f6b656e2100000000000000006044820152fd5b9050346101f65760203660031901126101f65761047361124a565b835460ff8160081c161592838094610584575b801561056d575b15610513575060ff198116600117855582610502575b5060018060a01b03166bffffffffffffffffffffffff60a01b60655416176065556104cc575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff1916610101178455386104a3565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b15801561048d5750600160ff83161461048d565b50600160ff831610610486565b919050346101f657806003193601126101f6576105ac61124a565b6105b4611260565b60655490916001600160a01b039186908316803b156101105781602491875192838092630ceb3b9b60e21b8252338c8301525afa80156106b5579084939291610698575b50501691828652606660205261061482858820541615156115c9565b16926106208415611520565b60208351809263313ce56760e01b825281875afa90811561068e5760ff610653926008928891610670575b50161461157d565b83526066602052822080546001600160a01b031916909117905580f35b610688915060203d811161033d5761032f81836112bc565b3861064b565b83513d87823e3d90fd5b6106a491929350611276565b6106b157819086386105f8565b8580fd5b86513d84823e3d90fd5b9050346101f65760603660031901126101f6576106da61124a565b6024926001600160a01b036044358181169486359493929091869003610964578415610916576065548351635ee0531d60e01b8152338482015260209591831686828b81845afa91821561090c57859188918d946108ed575b50836108df575b831561086a575b5050501561081d571695825163a9059cbb60e01b81528683820152858282015284816044818c8c5af19081156108135789916107e6575b50156107ad575050907f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f791519283523392a480f35b60649360169293519362461bcd60e51b8552840152820152754552433230207472616e73666572206661696c65642160501b6044820152fd5b6108069150853d871161080c575b6107fe81836112bc565b81019061160d565b38610778565b503d6107f4565b84513d8b823e3d90fd5b835162461bcd60e51b81528084018690526022818a01527f54726561737572793a207769746864726177206e6f7420617574686f72697a65604482015261642160f01b6064820152608490fd5b8751631241377160e31b815293509091839182905afa9081156108d5578a9161089b575b5082163314838638610741565b90508581813d83116108ce575b6108b281836112bc565b810103126108ca575182811681036108ca573861088e565b8980fd5b503d6108a8565b85513d8c823e3d90fd5b60675460ff1615935061073a565b610905919450823d841161080c576107fe81836112bc565b9238610733565b86513d8d823e3d90fd5b506023866020608494519362461bcd60e51b85528401528201527f54726561737572793a2077697468647261776e20616d6f756e74206973207a65604482015262726f2160e81b6064820152fd5b600080fd5b919050346101f657806003193601126101f65761098461124a565b61098c611260565b60655490916001600160a01b039186908316803b156101105781602491875192838092630ceb3b9b60e21b8252338c8301525afa80156106b5579084939291610aa7575b5050169081865260209260668452818588205416610a645716936109f5851515611520565b828451809263313ce56760e01b825281885afa908115610a5a57600860ff6066959493610a2a938a91610a435750161461157d565b855252822080546001600160a01b031916909117905580f35b6106889150863d881161033d5761032f81836112bc565b84513d88823e3d90fd5b845162461bcd60e51b8152808701859052601960248201527f54726561737572793a20616c72656164792065786973747321000000000000006044820152606490fd5b610ab391929350611276565b6106b157819086386109d0565b90508234610b835780600319360112610b8357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b1b576020825160008051602061163d8339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b80fd5b918091506003193601126101f657610b9c61124a565b9060249081359067ffffffffffffffff82116106b157366023830112156106b15781850135610bca816112de565b610bd6835191826112bc565b8181528760209485830193368882840101116101f65780888893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610c2f308314156112fa565b610c4c60008051602061163d83398151915292828454161461135b565b898160655416803b1561011057818b8a895180948193630ceb3b9b60e21b835233908301525afa8015610ec657610eb2575b50507f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cbe5750505050505050610cbb91506113bc565b80f35b87929394959697169085516352d1902d60e01b815287818b81865afa60009181610e83575b50610d4157865162461bcd60e51b8152808b01899052602e818b01527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b989294989791939703610e2f575050610d59826113bc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590610e27575b610d96575b505050505080f35b600080610e1296845196610da9886112a0565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15610e1d573d610e03610dfa826112de565b925192836112bc565b8152600081943d92013e61144c565b503880808080610d8e565b506060925061144c565b506001610d89565b845162461bcd60e51b81529182018690526029908201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d8311610eab575b610e9a81836112bc565b81010312610b835750519038610ce3565b503d610e90565b610ebb90611276565b6108ca578938610c7e565b87513d84823e3d90fd5b50503461011057816003193601126101105760209060ff6067541690519015158152f35b915034610110576020366003190112610110578035928315158094036101f6576065546001600160a01b031691823b156101e65783906024835180958193630ceb3b9b60e21b835233908301525afa908115610f775750610f63575b505060ff80196067541691161760675580f35b610f6c90611276565b610110578138610f50565b513d84823e3d90fd5b919050346101f6576020806003193601126101e657610f9d61124a565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116610fd5308214156112fa565b610ff260008051602061163d83398151915291838354161461135b565b816065541687813b15610b83578451630ceb3b9b60e21b8152338982015291829060249082905afa8015611209576111f6575b508251908482019282841067ffffffffffffffff8511176111e1578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561108057505050505050610cbb91506113bc565b869293949596169085516352d1902d60e01b815287818a81865afa600091816111b2575b5061110357865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b97919293969594970361115d575061111a826113bc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511580159061115557610d9657505050505080f35b506000610d89565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d83116111da575b6111c981836112bc565b81010312610b8357505190386110a4565b503d6111bf565b604188634e487b7160e01b6000525260246000fd5b61120290979197611276565b9538611025565b84513d8a823e3d90fd5b5050346101105781600319360112610110576020905160128152f35b84903461011057816003193601126101105780600860209252f35b600435906001600160a01b038216820361096457565b602435906001600160a01b038216820361096457565b67ffffffffffffffff811161128a57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761128a57604052565b90601f8019910116810190811067ffffffffffffffff82111761128a57604052565b67ffffffffffffffff811161128a57601f01601f191660200190565b1561130157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561136257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156113f15760008051602061163d83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156114ae5750815115611460575090565b3b156114695790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156114c15750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611507575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506114e4565b1561152757565b60405162461bcd60e51b8152602060048201526015602482015274054726561737572793a20707269636572203d3d203605c1b6044820152606490fd5b90816020910312610964575160ff811681036109645790565b1561158457565b60405162461bcd60e51b815260206004820152601e60248201527f54726561737572793a2070726963657220646563696d616c7320213d203800006044820152606490fd5b156115d057565b60405162461bcd60e51b815260206004820152601560248201527454726561737572793a206e6f74206578697374732160581b6044820152606490fd5b90816020910312610964575180151581036109645790565b519069ffffffffffffffffffff821682036109645756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122088b6145abfae96d340b142ea0223e55431e7c7a68f7f28f4d91cfe3b72609aa464736f6c63430008120033",
  "devdoc": {
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is changed."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "upgradeTo(address)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 371,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 374,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 353,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 668,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 6102,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "addressBook",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 6106,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "pricers",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6108,
        "contract": "contracts/core/Treasury.sol:Treasury",
        "label": "onlyGovernanceWithdrawn",
        "offset": 0,
        "slot": "103",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}